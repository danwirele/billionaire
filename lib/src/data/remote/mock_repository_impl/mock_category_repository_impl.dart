import 'package:billionaire/src/domain/models/category/category_model.dart';
import 'package:billionaire/src/domain/repositories/category_repository.dart';

class MockCategoryRepositoryImpl
    implements CategoryRepository {
  MockCategoryRepositoryImpl() {
    resetMockData();
  }

  final List<CategoryModel> _mockCategories = [];

  @override
  Future<List<CategoryModel>> getAllCategories() async {
    await Future.delayed(const Duration(milliseconds: 250));
    return _mockCategories;
  }

  @override
  Future<List<CategoryModel>> getAllCategoriesByType({
    required bool isIncome,
  }) async {
    await Future.delayed(const Duration(milliseconds: 200));

    return _mockCategories
        .where((category) => category.isIncome == isIncome)
        .toList();
  }

  /// [resetMockData] –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
  /// —Å–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  void resetMockData() {
    _mockCategories.clear();
    _mockCategories.addAll([
      CategoryModel.fromJson({
        "id": 1,
        "name": "–ó–∞—Ä–ø–ª–∞—Ç–∞",
        "emoji": "üí∞",
        "isIncome": true,
      }),
      CategoryModel.fromJson({
        "id": 2,
        "name": "–§—Ä–∏–ª–∞–Ω—Å",
        "emoji": "üíª",
        "isIncome": true,
      }),
      CategoryModel.fromJson({
        "id": 3,
        "name": "–î–∏–≤–∏–¥–µ–Ω–¥—ã",
        "emoji": "üìà",
        "isIncome": true,
      }),
      CategoryModel.fromJson({
        "id": 4,
        "name": "–ü—Ä–æ–¥—É–∫—Ç—ã",
        "emoji": "üçé",
        "isIncome": false,
      }),
      CategoryModel.fromJson({
        "id": 5,
        "name": "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
        "emoji": "üöï",
        "isIncome": false,
      }),
      CategoryModel.fromJson({
        "id": 6,
        "name": "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
        "emoji": "üéÆ",
        "isIncome": false,
      }),
      CategoryModel.fromJson({
        "id": 7,
        "name": "–ü–æ–¥–∞—Ä–∫–∏",
        "emoji": "üéÅ",
        "isIncome": true,
      }),
      CategoryModel.fromJson({
        "id": 8,
        "name": "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
        "emoji": "üéì",
        "isIncome": false,
      }),
    ]);
  }
}
